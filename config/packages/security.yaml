security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                username_path: email
                check_path:               /login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        refresh:
            pattern: ^/token/refresh
            stateless: true
            anonymous: true
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            guard:
                authenticators:
                    - App\Security\GoogleAuthenticator
                    - App\Security\FacebookAuthenticator
                entry_point: App\Security\GoogleAuthenticator

    access_control:
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/profiles, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/sectors, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/companyFilter, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/cities, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/articles, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/getNotes, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/tags, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/companies, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/companiesFilters, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN] }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN